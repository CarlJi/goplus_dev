// Code generated by gop (Go+); DO NOT EDIT.

package main

import "fmt"

const _ = true
const Pi = 3.14
const Gopo_Mul = "MulInt,MulFloat"

type M struct {
	Info string
}
type T struct {
	X int
	Y int
}
//line goplus/testdata/main.gop:14:1
func Add__0(a int, b int) int {
//line goplus/testdata/main.gop:15:1
	return a + b
}
//line goplus/testdata/main.gop:17:1
func Add__1(a float64, b float64) float64 {
//line goplus/testdata/main.gop:18:1
	return a + b
}
//line goplus/testdata/main.gop:5:1
func MulInt(a int, b int) int {
//line goplus/testdata/main.gop:6:1
	return a * b
}
//line goplus/testdata/main.gop:9:1
func MulFloat(a float64, b float64) float64 {
//line goplus/testdata/main.gop:10:1
	return a * b
}

type rect struct {
	M
	X int
	Y int
}

var version = "1.0"
//line goplus/testdata/main.gop:36:1
func (t *T) Info() string {
//line goplus/testdata/main.gop:37:1
	return fmt.Sprintf("%v-%v", t.X, t.Y)
}
//line goplus/testdata/main.gop:40:1
func onStart(fn func(int) int) {
//line goplus/testdata/main.gop:41:1
	n := fn(100)
//line goplus/testdata/main.gop:42:1
	fmt.Println(n)
}
//line goplus/testdata/main.gop:45
func main() {
//line goplus/testdata/main.gop:45:1
	fmt.Println(version)
//line goplus/testdata/main.gop:46:1
	rc := &rect{M{"hello"}, 100, 200}
//line goplus/testdata/main.gop:47:1
	fmt.Println(rc)
//line goplus/testdata/main.gop:49:1
	type My int
//line goplus/testdata/main.gop:51:1
	demo(My(100))
//line goplus/testdata/main.gop:53:1
	onStart(func(x int) int {
//line goplus/testdata/main.gop:53:1
		return x * x
	})
//line goplus/testdata/main.gop:54:1
	onStart(func(x int) int {
//line goplus/testdata/main.gop:55:1
		return x * x
	})
}
//line goplus/testdata/rect.gox:7:1
func (this *rect) demo() {
}
//line goplus/testdata/rect.gox:9
func (this *rect) Main() {
//line goplus/testdata/rect.gox:9:1
	fmt.Println(this.X, this.Y)
}
