const Pi = 3.14

var version = "1.0"

func MulInt(a, b int) int {
	return a * b
}

func MulFloat(a, b float64) float64 {
	return a * b
}

func Add = (
	func(a int, b int) int {
		return a+b
	}
	func(a float64, b float64) float64 {
		return a+b
	}
)

func Mul = (
	MulInt
	MulFloat
)

type M struct {
	Info string
}

type T struct {
	X int
	Y int
}

func (t *T) Info() string {
	return sprintf("%v-%v", t.X, t.Y)
}

func onStart(fn func(int) int) {
	n := fn(100)
	println n
}

println(version)
rc := &rect{M{"hello"},100,200}
println rc

// Go+ src =>  Go+ ast => gogen types check => Go ast => Go src
type My int
demo(My(100))

onStart x => x*x
onStart x => {
	return x*x
}

